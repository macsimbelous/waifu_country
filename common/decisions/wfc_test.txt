wfc_test_category = {
	wfc_test_compare_fleet = {
		fire_only_once = yes
		cost = 0
		available = {
			custom_trigger_tooltip = {
				tooltip = acw_battle_trigger_tt
				if = {
					limit = {
						check_variable = {
							num_ships > 0
						}
					}
					if = {
						limit = {
							FROM = {
								check_variable = {
									num_ships > 0
								}
							}
						}
						set_temp_variable = {
							temp_fleet_strength = num_ships_with_type@submarine
						}
						add_to_temp_variable = {
							temp_fleet_strength = num_ships_with_type@destroyer
						}
						add_to_temp_variable = {
							temp_fleet_strength = num_ships_with_type@light_cruiser
						}
						#heavy
						set_temp_variable = {
							temp_var = num_ships_with_type@heavy_cruiser
						}
						add_to_temp_variable = {
							temp_var = num_ships_with_type@battle_cruiser
						}
						multiply_temp_variable = {
							temp_var = 4
						}
						add_to_temp_variable = {
							temp_fleet_strength = temp_var
						}
						#super heavy
						set_temp_variable = {
							temp_var = num_ships_with_type@battleship
						}
						add_to_temp_variable = {
							temp_var = num_ships_with_type@carrier
						}
						multiply_temp_variable = {
							temp_var = 8
						}
						add_to_temp_variable = {
							temp_fleet_strength = temp_var
						}
						#target fleet
						set_temp_variable = {
							temp_fleet_strength_terget = ENG.num_ships_with_type@submarine
						}
						add_to_temp_variable = {
							temp_fleet_strength_terget = ENG.num_ships_with_type@destroyer
						}
						add_to_temp_variable = {
							temp_fleet_strength_terget = ENG.num_ships_with_type@light_cruiser
						}
						#heavy
						set_temp_variable = {
							temp_var = ENG.num_ships_with_type@heavy_cruiser
						}
						add_to_temp_variable = {
							temp_var = ENG.num_ships_with_type@battle_cruiser
						}
						multiply_temp_variable = {
							temp_var = 4
						}
						add_to_temp_variable = {
							temp_fleet_strength_terget = temp_var
						}
						#super heavy
						set_temp_variable = {
							temp_var = ENG.num_ships_with_type@battleship
						}
						add_to_temp_variable = {
							temp_var = ENG.num_ships_with_type@carrier
						}
						multiply_temp_variable = {
							temp_var = 8
						}
						add_to_temp_variable = {
							temp_fleet_strength_terget = temp_var
						}
						divide_temp_variable = {
							temp_fleet_strength = temp_fleet_strength_terget
						}
						check_variable = {
							var = temp_fleet_strength
							value = 2
							compare = greater_than_or_equals
						}
					}
					else = {
						always = yes
					}
				}
				else = {
					always = no
				}
			}
		}
		complete_effect = {
			add_political_power = 100
		}
	}
	wfc_test_change_gov_n = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_popularity = {
				ideology = neutrality
				popularity = 0.6
			}
			set_politics = {
				ruling_party = neutrality
			}
		}
	}
	wfc_test_change_gov_d = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_popularity = {
				ideology = democratic
				popularity = 0.6
			}
			set_politics = {
				ruling_party = democratic
			}
		}
	}
	wfc_test_change_gov_c = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_popularity = {
				ideology = communism
				popularity = 0.6
			}
			set_politics = {
				ruling_party = communism
			}
		}
	}
	wfc_test_change_gov_f = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_popularity = {
				ideology = fascism
				popularity = 0.6
			}
			set_politics = {
				ruling_party = fascism
			}
		}
	}
	wfc_test_create_kgb = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			create_intelligence_agency = {
				icon = GFX_intelligence_agency_logo_generic_8
				name = "KKGGBB"
			}
		}
	}
	wfc_test_add_pp_cp = {
		fire_only_once = no
		cost = 0
		available = {
			# wfc_test_char = {
			# 	is_unit_leader = yes
			# }
		}
		complete_effect = {
			add_political_power = 1000
			add_command_power = 100
		}
	}
	wfc_test_add_stability = {
		fire_only_once = no
		cost = 0
		available = {
			# wfc_test_char = {
			# 	is_unit_leader = yes
			# }
		}
		complete_effect = {
			add_stability = 0.2
		}
	}
	wfc_test_1 = {
		fire_only_once = no
		cost = 0
		available = {
			network_strength = {
				target = BUL
				value > 50
			}
			network_strength = {
				target = BUL
				value > 75
			}
			network_national_coverage = {
				target = BUL
				value > 50
			}
			network_national_coverage = {
				target = BUL
				value > 75
			}
		}
		complete_effect = {
			add_political_power = 100
		}
	}
	wfc_acw_war_rom = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		complete_effect = {
			FRA = {
				diplomatic_relation = {
					country = ROM
					relation = guarantee
					active = no
				}
			}
			CZE = {
				diplomatic_relation = {
					country = ROM
					relation = guarantee
					active = no
				}
			}
			declare_war_on = {
				target = ROM
				type = annex_everything
			}
		}
	}
	wfc_rom_to_collaboration_government = {
		fire_only_once = no
		cost = 0
		available = {
		}
		complete_effect = {
			ROM = {
				set_variable = {
					collaboration_formed_by = 1
				}
				random_owned_state = {
					#add_core_of = ROOT
					add_claim_by = ROOT
				}
			}
			set_autonomy = {
				target = ROM
				autonomy_state = autonomy_collaboration_government
			}
			# ROM = {
			# 	wfc_change_country_leader = yes
			# }
		}
	}
	wfc_rom_to_puppet = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			set_temp_variable = {
				country_to_initiate = ROM
			}
			wfc_instantiate_province = yes
			var:country_to_initiate = {
				if = {
					limit = {
						NOT = {
							original_tag = ACW
							original_tag = HEN
							original_tag = MAH
							original_tag = TRP
							original_tag = MMS
							original_tag = MEH
						}
					}
					wfc_change_country_leader = yes
				}
			}
		}
	}
	wfc_annex_yug = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
			country_exists = YUG
		}
		complete_effect = {
			annex_country = {
				target = YUG
				transfer_troops = yes
			}
			every_owned_state = {
				add_core_of = ROOT
			}
		}
	}
	wfc_test_delete_all_ulits = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		complete_effect = {
			every_other_country = {
				limit = {
					is_puppet_of = ROOT
				}
				for_each_loop = {
					array = owned_states
					delete_unit = {
						state = v
						disband = yes
					}
				}
			}
		}
	}
	wfc_test_rise_zombi = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = MMS
		}
		available = {
			has_full_control_of_state = 267
		}
		complete_effect = {
			ZMB = {
				#set_state_controller = 267
				transfer_state = 267
				load_oob = ZMB_1936
				267 = {
					add_core_of = ZMB
					set_temp_variable = {
						i = 0
					}
					while_loop_effect = {
						limit = {
							check_variable = {
								i = 10
								compare = less_than
							}
						}
						add_to_temp_variable = {
							i = 1
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
						create_unit = {
							division = "name = \"Zombi Division\" division_template = \"Zombi Division\" start_experience_factor = 1 start_equipment_factor = 1"
							owner = ZMB
							#prioritize_location = 4518
							allow_spawning_on_enemy_provs = yes
						}
					}
				}
				declare_war_on = {
					target = MMS
					type = annex_everything
				}
				add_ideas = ZMB_tae_yamada
				country_lock_all_division_template = yes
				set_division_force_allow_recruiting = {
					division_template = "Zombi Division"
				}
				set_division_force_allow_recruiting = {
					division_template = "Zombi Cavalry"
				}
				#dddassad
				delete_unit_template_and_units = {
					division_template = "MonMusu Garrison"
					disband = yes
				}
				delete_unit_template_and_units = {
					division_template = "MonMusu Cavalry"
					disband = yes
				}
				delete_unit_template_and_units = {
					division_template = "MonMusu Brigade"
					disband = yes
				}
				delete_unit_template_and_units = {
					division_template = "MonMusu Division"
					disband = yes
				}
			}
			country_event = mms_event.2
			news_event = wfc_news.10
		}
	}
	wfc_test_add_claims_to_rom = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		complete_effect = {
			ROM = {
				every_owned_state = {
					add_claim_by = ROOT
				}
			}
		}
	}
	wfc_test_create_colab = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		available = {
		}
		complete_effect = {
			every_controlled_state = {
				limit = {
					NOT = {
						is_core_of = ROOT
					}
				}
				add_compliance = 71
			}
		}
	}
	wfc_test_create_balance_of_power = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = MMS
		}
		available = {
		}
		complete_effect = {
			set_power_balance = {
				id = mms_balance_of_power
				left_side = mms_default_left_side
				right_side = mms_default_right_side
				set_value = -0.25
			}
			add_power_balance_modifier = {
				id = mms_balance_of_power
				modifier = mms_bop_modifier_02_grift_weekly
			}
		}
	}
	wfc_test_2 = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_to_variable = {
				wfc_cost_pp = 10
			}
			add_to_variable = {
				wfc_cost_cf = 5
			}
			add_to_variable = {
				wfc_cost_days = 10
			}
		}
	}
	wfc_test_3 = {
		fire_only_once = no
		cost = var:wfc_cost_pp
		days_remove = var:wfc_cost_days
		available = {
			num_of_civilian_factories_available_for_projects > 4
		}
		modifier = {
			civilian_factory_use = 5
		}
		remove_effect = {
			add_political_power = 100
		}
		complete_effect = {
			add_political_power = 100
		}
	}
	wfc_test_4 = {
		fire_only_once = no
		cost = 0
		available = {
			all_controlled_state = {
				is_core_of = UKR
				compliance > 40
			}
		}
		complete_effect = {
			every_other_country = {
				limit = {
					is_puppet_of = ROOT
				}
				set_rule = {
					units_deployed_to_overlord = no
				}
			}
		}
	}
}
