wfc_test_category = {
	wfc_test_compare_fleet = {
		fire_only_once = yes
		cost = 0
		allowed = {
			always = no
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = acw_battle_trigger_tt
				if = {
					limit = {
						check_variable = {
							num_ships > 0
						}
					}
					if = {
						limit = {
							FROM = {
								check_variable = {
									num_ships > 0
								}
							}
						}
						set_temp_variable = {
							temp_fleet_strength = num_ships_with_type@submarine
						}
						add_to_temp_variable = {
							temp_fleet_strength = num_ships_with_type@destroyer
						}
						add_to_temp_variable = {
							temp_fleet_strength = num_ships_with_type@light_cruiser
						}
						#heavy
						set_temp_variable = {
							temp_var = num_ships_with_type@heavy_cruiser
						}
						add_to_temp_variable = {
							temp_var = num_ships_with_type@battle_cruiser
						}
						multiply_temp_variable = {
							temp_var = 4
						}
						add_to_temp_variable = {
							temp_fleet_strength = temp_var
						}
						#super heavy
						set_temp_variable = {
							temp_var = num_ships_with_type@battleship
						}
						add_to_temp_variable = {
							temp_var = num_ships_with_type@carrier
						}
						multiply_temp_variable = {
							temp_var = 8
						}
						add_to_temp_variable = {
							temp_fleet_strength = temp_var
						}
						#target fleet
						set_temp_variable = {
							temp_fleet_strength_terget = ENG.num_ships_with_type@submarine
						}
						add_to_temp_variable = {
							temp_fleet_strength_terget = ENG.num_ships_with_type@destroyer
						}
						add_to_temp_variable = {
							temp_fleet_strength_terget = ENG.num_ships_with_type@light_cruiser
						}
						#heavy
						set_temp_variable = {
							temp_var = ENG.num_ships_with_type@heavy_cruiser
						}
						add_to_temp_variable = {
							temp_var = ENG.num_ships_with_type@battle_cruiser
						}
						multiply_temp_variable = {
							temp_var = 4
						}
						add_to_temp_variable = {
							temp_fleet_strength_terget = temp_var
						}
						#super heavy
						set_temp_variable = {
							temp_var = ENG.num_ships_with_type@battleship
						}
						add_to_temp_variable = {
							temp_var = ENG.num_ships_with_type@carrier
						}
						multiply_temp_variable = {
							temp_var = 8
						}
						add_to_temp_variable = {
							temp_fleet_strength_terget = temp_var
						}
						divide_temp_variable = {
							temp_fleet_strength = temp_fleet_strength_terget
						}
						check_variable = {
							var = temp_fleet_strength
							value = 2
							compare = greater_than_or_equals
						}
					}
					else = {
						always = yes
					}
				}
				else = {
					always = no
				}
			}
		}
		complete_effect = {
			add_political_power = 100
		}
	}
	wfc_test_change_gov_n = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_popularity = {
				ideology = neutrality
				popularity = 0.6
			}
			set_politics = {
				ruling_party = neutrality
			}
		}
	}
	wfc_test_change_gov_d = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_popularity = {
				ideology = democratic
				popularity = 0.6
			}
			set_politics = {
				ruling_party = democratic
			}
		}
	}
	wfc_test_change_gov_c = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_popularity = {
				ideology = communism
				popularity = 0.6
			}
			set_politics = {
				ruling_party = communism
			}
		}
	}
	wfc_test_change_gov_f = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			add_popularity = {
				ideology = fascism
				popularity = 0.6
			}
			set_politics = {
				ruling_party = fascism
			}
		}
	}
	wfc_test_create_kgb = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			create_intelligence_agency = {
				icon = GFX_intelligence_agency_logo_generic_8
				name = "KKGGBB"
			}
		}
	}
	wfc_test_add_pp_cp = {
		fire_only_once = no
		cost = 0
		available = {
			# wfc_test_char = {
			# 	is_unit_leader = yes
			# }
		}
		complete_effect = {
			add_political_power = 1000
			add_command_power = 100
		}
	}
	wfc_test_add_stability = {
		fire_only_once = no
		cost = 0
		available = {
			# wfc_test_char = {
			# 	is_unit_leader = yes
			# }
		}
		complete_effect = {
			add_stability = 0.2
		}
	}
	wfc_acw_war_rom = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		complete_effect = {
			FRA = {
				diplomatic_relation = {
					country = ROM
					relation = guarantee
					active = no
				}
			}
			CZE = {
				diplomatic_relation = {
					country = ROM
					relation = guarantee
					active = no
				}
			}
			declare_war_on = {
				target = ROM
				type = annex_everything
			}
		}
	}
	wfc_rom_to_collaboration_government = {
		fire_only_once = no
		cost = 0
		available = {
		}
		complete_effect = {
			ROM = {
				set_variable = {
					collaboration_formed_by = 1
				}
				random_owned_state = {
					#add_core_of = ROOT
					add_claim_by = ROOT
				}
			}
			set_autonomy = {
				target = ROM
				autonomy_state = autonomy_collaboration_government
			}
			# ROM = {
			# 	wfc_change_country_leader = yes
			# }
		}
	}
	wfc_rom_to_puppet = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			set_temp_variable = {
				country_to_initiate = ROM
			}
			wfc_instantiate_province = yes
			var:country_to_initiate = {
				if = {
					limit = {
						NOT = {
							original_tag = ACW
							original_tag = HEN
							original_tag = MAH
							original_tag = TRP
							original_tag = MMS
							original_tag = MEH
						}
					}
					wfc_change_country_leader = yes
				}
			}
		}
	}
	wfc_annex_yug = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
			country_exists = YUG
		}
		complete_effect = {
			annex_country = {
				target = YUG
				transfer_troops = yes
			}
			every_owned_state = {
				add_core_of = ROOT
			}
		}
	}
	wfc_annex_balkan = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		complete_effect = {
			annex_country = {
				target = YUG
				transfer_troops = yes
			}
			annex_country = {
				target = HUN
				transfer_troops = yes
			}
			annex_country = {
				target = ROM
				transfer_troops = yes
			}
			annex_country = {
				target = BUL
				transfer_troops = yes
			}
		}
	}
	wfc_test_delete_all_ulits = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		complete_effect = {
			every_other_country = {
				limit = {
					is_puppet_of = ROOT
				}
				for_each_loop = {
					array = owned_states
					delete_unit = {
						state = v
						disband = yes
					}
				}
			}
		}
	}
	wfc_test_add_claims_to_rom = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		complete_effect = {
			ROM = {
				every_owned_state = {
					add_claim_by = ROOT
				}
			}
		}
	}
	wfc_test_create_colab = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = ACW
		}
		available = {
		}
		complete_effect = {
			every_controlled_state = {
				limit = {
					NOT = {
						is_core_of = ROOT
					}
				}
				add_compliance = 71
			}
		}
	}
	wfc_test_create_balance_of_power = {
		fire_only_once = no
		cost = 0
		visible = {
			tag = MMS
		}
		available = {
		}
		complete_effect = {
			set_power_balance = {
				id = mms_balance_of_power
				left_side = mms_default_left_side
				right_side = mms_default_right_side
				set_value = -0.25
			}
			add_power_balance_modifier = {
				id = mms_balance_of_power
				modifier = mms_bop_modifier_02_grift_weekly
			}
		}
	}
	wfc_test_add_factory = {
		fire_only_once = no
		cost = 0
		available = {
		}
		complete_effect = {
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
			wfc_add_industrial_complex_in_random_state = yes
		}
	}
	wfc_test_add_random_skill_to_random_generals = {
		fire_only_once = no
		cost = 0
		complete_effect = {
			random_character = {
				limit = {
					is_army_leader = yes
					skill < 3
				}
				set_variable = {
					rand_skill = 0
				}
				set_variable_to_random = {
					var = rand_skill
					min = 2
					max = 4
					integer = yes
				}
				add_skill_level = rand_skill
				add_attack = rand_skill
				add_defense = rand_skill
				add_planning = rand_skill
				add_logistics = rand_skill
				add_unit_leader_trait = wfc_exp_trait
				add_random_trait = {
					old_guard
					brilliant_strategist
					inflexible_strategist
					politically_connected
					war_hero
					career_officer
					trait_cautious
					trait_reckless
					media_personality
					harsh_leader
					bearer_of_artillery
					infantry_officer
					cavalry_officer
					armor_officer
					engineer_officer
					irregulars_officer
					ascari_officer
					militias_officer
					jaeger
				}
			}
			random_character = {
				limit = {
					is_army_leader = yes
					skill < 3
				}
				set_variable = {
					rand_skill = 0
				}
				set_variable_to_random = {
					var = rand_skill
					min = 2
					max = 4
					integer = yes
				}
				add_skill_level = rand_skill
				add_attack = rand_skill
				add_defense = rand_skill
				add_planning = rand_skill
				add_logistics = rand_skill
				add_unit_leader_trait = wfc_exp_trait
				add_random_trait = {
					old_guard
					brilliant_strategist
					inflexible_strategist
					politically_connected
					war_hero
					career_officer
					trait_cautious
					trait_reckless
					media_personality
					harsh_leader
					bearer_of_artillery
					infantry_officer
					cavalry_officer
					armor_officer
					engineer_officer
					irregulars_officer
					ascari_officer
					militias_officer
					jaeger
				}
			}
			random_character = {
				limit = {
					is_army_leader = yes
					skill < 3
				}
				set_variable = {
					rand_skill = 0
				}
				set_variable_to_random = {
					var = rand_skill
					min = 2
					max = 4
					integer = yes
				}
				add_skill_level = rand_skill
				add_attack = rand_skill
				add_defense = rand_skill
				add_planning = rand_skill
				add_logistics = rand_skill
				add_unit_leader_trait = wfc_exp_trait
				add_random_trait = {
					old_guard
					brilliant_strategist
					inflexible_strategist
					politically_connected
					war_hero
					career_officer
					trait_cautious
					trait_reckless
					media_personality
					harsh_leader
					bearer_of_artillery
					infantry_officer
					cavalry_officer
					armor_officer
					engineer_officer
					irregulars_officer
					ascari_officer
					militias_officer
					jaeger
				}
			}
			random_character = {
				limit = {
					is_navy_leader = yes
					skill < 3
				}
				set_variable = {
					rand_skill = 0
				}
				set_variable_to_random = {
					var = rand_skill
					min = 2
					max = 4
					integer = yes
				}
				add_skill_level = rand_skill
				add_attack = rand_skill
				add_defense = rand_skill
				add_maneuver = rand_skill
				add_coordination = rand_skill
				add_unit_leader_trait = wfc_exp_navy_trait
				add_random_trait = {
					old_guard_navy
					gentlemanly
					gunnery_expert
					cuts_corners
					chief_engineer
					navy_media_personality
					bold
					navy_career_officer
					battleship_adherent
					aviation_enthusiast
					caustic_personality
					craven
					naval_lineage
				}
			}
			random_character = {
				limit = {
					is_navy_leader = yes
					skill < 3
				}
				set_variable = {
					rand_skill = 0
				}
				set_variable_to_random = {
					var = rand_skill
					min = 2
					max = 4
					integer = yes
				}
				add_skill_level = rand_skill
				add_attack = rand_skill
				add_defense = rand_skill
				add_maneuver = rand_skill
				add_coordination = rand_skill
				add_unit_leader_trait = wfc_exp_navy_trait
				add_random_trait = {
					old_guard_navy
					gentlemanly
					gunnery_expert
					cuts_corners
					chief_engineer
					navy_media_personality
					bold
					navy_career_officer
					battleship_adherent
					aviation_enthusiast
					caustic_personality
					craven
					naval_lineage
				}
			}
		}
	}
	wfc_test_create_faction = {
		complete_effect = {
			create_faction = wfc_test_faction
			if = {
				limit = {
					tag = NEC
				}
				add_to_faction = TIB
				add_to_faction = BHU
			}
		}
	}
	wfc_test_add_factory_to_offsite = {
		complete_effect = {
			if = {
				limit = {
					any_controlled_state = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = yes
						}
						wfc_is_possible_construction = yes
					}
				}
				wfc_add_industrial_complex_in_random_state = yes
			}
			else = {
				add_offsite_building = {
					type = industrial_complex
					level = 1
				}
			}
			if = {
				limit = {
					any_controlled_state = {
						free_building_slots = {
							building = arms_factory
							size > 0
							include_locked = yes
						}
						wfc_is_possible_construction = yes
					}
				}
				wfc_add_arms_factory_in_random_state = yes
			}
			else = {
				add_offsite_building = {
					type = arms_factory
					level = 1
				}
			}
			if = {
				limit = {
					any_controlled_state = {
						free_building_slots = {
							building = dockyard
							size > 0
							include_locked = yes
						}
						wfc_is_possible_construction = yes
					}
				}
				wfc_add_dockyard_in_random_state = yes
			}
			else = {
				add_offsite_building = {
					type = dockyard
					level = 1
				}
			}
			###########
			if = {
				limit = {
					76 = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = yes
						}
					}
				}
				76 = {
					add_resource = {
						type = steel
						amount = 30
					}
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = industrial_complex
						instant_build = yes
						level = 1
					}
				}
			}
			else_if = {
				limit = {
					NOT = {
						76 = {
							free_building_slots = {
								building = industrial_complex
								size > 0
								include_locked = yes
							}
						}
					}
					any_controlled_state = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = yes
						}
					}
				}
				76 = {
					add_resource = {
						type = steel
						amount = 30
					}
				}
				wfc_add_industrial_complex_in_random_state = yes
			}
			else = {
				76 = {
					add_resource = {
						type = steel
						amount = 30
					}
				}
				add_offsite_building = {
					type = industrial_complex
					level = 1
				}
			}
		}
	}
	wfc_test_necrofication = {
		complete_effect = {
			annex_country = {
				target = TIB
			}
			annex_country = {
				target = NEP
			}
			annex_country = {
				target = BHU
			}
			add_ideas = nec_idea_necrification
		}
	}
	wfc_test_compliance_up = {
		complete_effect = {
			every_controlled_state = {
				limit = {
					is_fully_controlled_by = ROOT
					NOT = {
						is_core_of = ROOT
					}
					any_neighbor_state = {
						is_core_of = ROOT
					}
				}
				add_compliance = 75
			}
		}
	}
	wfc_test_facility = {
		available = {
			has_facility_specialization = specialization_land
			land_facility < 1
			any_owned_state = {
				land_facility < 1
			}
		}
	}
}
